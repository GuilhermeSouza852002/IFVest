


<style>
.modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.4);
}

.modal-content {
    background-color: #fff;
    margin: 15% auto;
    padding: 20px;
    border-radius: 5px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    width: 80%;
    max-width: 500px;
    overflow-y: auto;
}

/* Estilos para o cabeçalho do modal */
.modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid #ddd;
    padding-bottom: 15px;
}

.modal-title {
    font-size: 24px;
    color: #333;
}

/* Estilos para o fechamento do modal */
.close-modal {
    background-color: #f8f8f8;
    border: none;
    cursor: pointer;
    font-size: 18px;
    padding: 10px 15px;
    border-radius: 4px;
    font-weight: bold;
}

/* Estilos para o formulário */
.form-group {
    margin-bottom: 15px;
}

.form-group label {
    display: block;
    margin-bottom: 5px;
    color: #666;
}

.form-group input,
.form-group select {
    width: 100%;
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 4px;
}

/* Estilos para os botões */




.label {
display: block;
margin-bottom: 8px;
}

.select {
width: 100%;
padding: 8px;
margin-bottom: 16px; /* Space between elements */
}

.button-group {
display: flex;
justify-content: space-between;
}

.add-topic-button,
.topic-button {
padding: 10px 15px;
border-radius: 5px;
border: none;
cursor: pointer;
}

.add-topic-button {
background-color: #007bff; /* Bootstrap primary color */
color: white;
}

.submit-button {
background-color: #28a745; /* Bootstrap success color */
color: white;
}
</style>
<div id="modal-create-topic" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h2>Criar Novo Tópico</h2>
            <button type="button" id="close-modal">Fechar</button>
        </div>

        
            <div class="topic-group">
                <label for="areaIdTopico" class="label">Selecione uma área:</label>
                <select name="areaIdTopico" id="areaIdTopico" class="select">
                    <option value="">Selecione uma opção</option>
                    <% Areas.forEach(area => { %>
                        <option value="<%= area.id %>">
                            <%= area.area %>
                        </option>
                    <% }) %>
                </select>
            </div>
            <div id="topico-container">
                <div class="flex-col-gap-2">
                    <label for="topico" class="label">Digite um novo Topico:</label>
                    <input type="text" name="topico" id="topico" placeholder="Digite o tópico" class="topic-input">
                </div>
            </div>
            <div class="button-group">
              
                <button type="button" class="topic-button" onclick="registerTopic()">Registrar</button>
            </div>


       

    </div>
</div>

<script>

    function showCreateTopicModal() {
        document.getElementById('modal-create-topic').style.display = 'block';
    }

    function closeCreateTopicModal() {
        document.getElementById('modal-create-topic').style.display = 'none';
    }

    // Event listener para o link
    document.querySelector('#create-topic-link').addEventListener('click', showCreateTopicModal);

    document.getElementById('close-modal').addEventListener('click', closeCreateTopicModal);
    async function registerTopic() {
    const areaIdTopico = document.getElementById('areaIdTopico').value; // Corrigido
    const topico = document.getElementById('topico').value;

    try {
        const response = await fetch('/professor/registrar-topico', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ areaIdTopico, topico }),
        });

        if (!response.ok) {
            throw new Error('Erro na requisição: ' + response.statusText);
        }

        const result = await response.json();
        alert('Tópico registrado com sucesso!'); // Mensagem de sucesso
        closeCreateTopicModal(); // Fecha o modal após sucesso

        // Aqui você pode adicionar lógica para atualizar a interface do usuário, se necessário

    } catch (error) {
        console.error('Erro:', error);
        alert('Ocorreu um erro ao registrar o tópico.'); // Mensagem de erro
    }
}
    // Event listener para o botão de registro
    

</script>